
// Regular Expression
// . 除了 \n以外的任意字符
// [] 范围 [0-9] 中的任意一个 还可以取消其他字符的意义 [.]就表示 .
// {} 表示前面的表达式出现了几次 {0, } 0 - 多次
// * 表示前面的表达式出现了0- 多次
// ? 0 - 1次 还可以用来阻止贪婪模式
// + 1 - 多次
// | 或者
// () 分组，提升优先级
// ^ 以xx开头 ^[0-9] 以数字开头 还可以表示 取非 [^0-9] 非数字
// $ 以xx结尾 [a-z]$ 以小写字母结尾 ^[0-9][a-z]$ 表示精确匹配
// \d 任意数字
// \D 非数字
// \s 空白符
// \S 非空白符
// \b 单词的边界
// \w 非特殊字符 [0-9a-zA-Z_]
// \W 特殊字符 [^0-9a-zA-Z_]

// 定义正则表达式
let reg = /\d{3}/
let reg1 = new RegExp(/\d{3}/)
let str = '今天是123'
console.log(reg.test(str))
console.log(str.match(reg))
